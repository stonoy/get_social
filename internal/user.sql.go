// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user.sql

package internal

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
insert into users(id, created_at, updated_at, name, email, password, location, age, role, username, bio)
values($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
returning id, created_at, updated_at, name, email, password, location, age, username, bio, role
`

type CreateUserParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	Name      string
	Email     string
	Password  string
	Location  string
	Age       int32
	Role      UserType
	Username  string
	Bio       string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
		arg.Email,
		arg.Password,
		arg.Location,
		arg.Age,
		arg.Role,
		arg.Username,
		arg.Bio,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Email,
		&i.Password,
		&i.Location,
		&i.Age,
		&i.Username,
		&i.Bio,
		&i.Role,
	)
	return i, err
}
